@mixin position($position, $args: ()) {
	$offsets: top right bottom left;
	position: $position;

	@if length($args) > 0 {

		// If there were no offsets
		@if not (index($args, top) or index($args, right) or index($args, bottom) or index($args, left)) {
			$positions: ();

			@for $i from 1 through length($args) {
				$positions: append($positions, nth($offsets, $i));  // Append offset
				$positions: append($positions, nth($args, $i));  // Append argument
			}

			$args: $positions;
		}

		@each $offset in $offsets {
			$i: index($args, $offset);

			// If offset exists
			@if $i {

				// If offset is at last position
				@if $i == length($args) {
					#{$offset}: 0;
				}

				// If offset follows by a value
				@else if $i + 1 <= length($args) {
					$value: nth($args, $i + 1);

					// If value is a offset
					@if index($offsets, $value) {
						#{$offset}: 0;
					}

					// If value is auto, initial or inherit
					@else if index(auto initial inherit, $value) {
						#{$offset}: unquote($value);
					}

					// If value is a number
					@else if type-of($value) == number and ($value == 0 or not unitless($value)) {
						#{$offset}: $value;
					}
				}
			}
		}
	}
}

@mixin absolute($args: ()) {
	@include position(absolute, $args);
}

@mixin fixed($args: ()) {
	@include position(fixed, $args);
}

@mixin relative($args: ()) {
	@include position(relative, $args);
}

@mixin sticky($args: ()) {
	@include position(sticky, $args);
}
